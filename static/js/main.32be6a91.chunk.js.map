{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","noMessage","selectGood","good","setState","removeGood","this","className","classNames","type","onClick","map","isSelected","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,MACdC,UAAW,qBAHf,EAMEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEJ,aAAcG,KAPlC,EAUEE,WAAa,WACX,EAAKD,SAAS,CAAEJ,aAAc,MAXlC,4CAcE,WAAU,IAAD,OACP,EAAoCM,KAAKP,MAAjCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,UAEtB,OACE,uBAAMM,UAAU,oBAAhB,UACE,oBAAIA,UAAWC,IACb,QACA,CAAE,gCAAiCR,IAFrC,SAKGA,EAEG,+CACMA,EADN,gBAIE,wBACE,UAAQ,cACRS,KAAK,SACLF,UAAU,cACVG,QAASJ,KAAKD,gBAIlBJ,IAGN,uBAAOM,UAAU,QAAjB,SACE,gCACGV,EAAMc,KAAI,SAAAR,GACT,IAAMS,EAAaT,IAASH,EAE5B,OACE,qBACE,UAAQ,OAERO,UAAWC,IACT,CAAE,+BAAgCI,IAJtC,UAOE,6BACGA,EAEG,wBACE,UAAQ,eACRH,KAAK,SACLF,UAAU,iBACVG,QAAS,EAAKL,WAJhB,eAUA,wBACE,UAAQ,YACRI,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAM,EAAKR,WAAWC,IAJjC,iBAWN,oBAAI,UAAQ,YAAYI,UAAU,eAAlC,SACGJ,MA9BEA,iBAjDvB,GAAyBU,aCpBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.32be6a91.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood: string,\n  noMessage: string,\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n    noMessage: 'No goods selected',\n  };\n\n  selectGood = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  removeGood = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood, noMessage } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className={classNames(\n          'title',\n          { 'is-flex is-align-items-center': selectedGood },\n        )}\n        >\n          {selectedGood\n            ? (\n              <>\n                {`${selectedGood} is selected`}\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  data-cy=\"ClearButton\"\n                  type=\"button\"\n                  className=\"delete ml-3\"\n                  onClick={this.removeGood}\n                />\n              </>\n            )\n            : noMessage}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              const isSelected = good === selectedGood;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={classNames(\n                    { 'has-background-success-light': isSelected },\n                  )}\n                >\n                  <td>\n                    {isSelected\n                      ? (\n                        <button\n                          data-cy=\"RemoveButton\"\n                          type=\"button\"\n                          className=\"button is-info\"\n                          onClick={this.removeGood}\n                        >\n                          -\n                        </button>\n                      )\n                      : (\n                        <button\n                          data-cy=\"AddButton\"\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={() => this.selectGood(good)}\n                        >\n                          +\n                        </button>\n                      )}\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}